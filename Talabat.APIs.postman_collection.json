{
	"info": {
		"_postman_id": "2fe5fe45-127d-4655-b502-58f2d2e6c899",
		"name": "Talabat.APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24025679"
	},
	"item": [
		{
			"name": "Session 02",
			"item": [
				{
					"name": "Product Controller",
					"item": [
						{
							"name": "Get All Products",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/products",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/Products/1",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"Products",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Error Handle",
					"item": [
						{
							"name": "Not Found Object Error",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/buggy/notfound",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"buggy",
										"notfound"
									]
								}
							},
							"response": []
						},
						{
							"name": "Server Error Null Ref Exception",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/buggy/servererror",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"buggy",
										"servererror"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bad Request",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/buggy/badrequest",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"buggy",
										"badrequest"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bad Request Validation",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/buggy/badrequest/five",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"buggy",
										"badrequest",
										"five"
									]
								}
							},
							"response": []
						},
						{
							"name": "Not Found Endpoint",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/hamada",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"hamada"
									]
								}
							},
							"response": []
						},
						{
							"name": "UnAuthorized",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/buggy/unauthorized",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"buggy",
										"unauthorized"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Session 03",
			"item": [
				{
					"name": "Sorting & Filtering & Pagination",
					"item": [
						{
							"name": "Get Products Sorted by Name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/products?sort=name",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"products"
									],
									"query": [
										{
											"key": "sort",
											"value": "name"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Products sorted by price Asc",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/products?sort=priceAsc",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"products"
									],
									"query": [
										{
											"key": "sort",
											"value": "priceAsc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Products Sorted by price Desc",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/products?sort=priceDesc",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"products"
									],
									"query": [
										{
											"key": "sort",
											"value": "priceDesc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get products by Brand",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/products?brandId=2",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"products"
									],
									"query": [
										{
											"key": "brandId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get products by type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/products?typeId=2",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"products"
									],
									"query": [
										{
											"key": "typeId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get products by Brand And Type Sorted by Price Asc",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/products?brandId=1&typeId=1&sort=priceAsc",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"products"
									],
									"query": [
										{
											"key": "brandId",
											"value": "1"
										},
										{
											"key": "typeId",
											"value": "1"
										},
										{
											"key": "sort",
											"value": "priceAsc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get products by Brand And Type Sorted by Price Desc",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/products?brandId=1&typeId=1&sort=priceDesc",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"products"
									],
									"query": [
										{
											"key": "brandId",
											"value": "1"
										},
										{
											"key": "typeId",
											"value": "1"
										},
										{
											"key": "sort",
											"value": "priceDesc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Paged Products page 1 size = 5",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/products?pageSize=5&pageIndex=1",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"products"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "5"
										},
										{
											"key": "pageIndex",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get products by Brand paged by size = 5 , index = 2",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/products?pageSize=5&pageIndex=2&brandId=1",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"products"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "5"
										},
										{
											"key": "pageIndex",
											"value": "2"
										},
										{
											"key": "brandId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Products , Brands , Types",
					"item": [
						{
							"name": "Get Product Brands",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/products/brands",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"products",
										"brands"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Products",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9naXZlbm5hbWUiOiJPbWFyIEFobWVkIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvZW1haWxhZGRyZXNzIjoib21hckFobWVkQGdtYWlsLmNvbSIsImV4cCI6MTcxNTM1NTYwNSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NzIxNSIsImF1ZCI6Ik15U2VjdXJlQXVkaWVuY2UifQ.8YEhIZTvUUHV1gWfYTHKpRk8TiG-BnXC7lzZkxQA4kk",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/products?search=Mocha",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"products"
									],
									"query": [
										{
											"key": "search",
											"value": "Mocha"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product Types",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/products/types",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"products",
										"types"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Session 04",
			"item": [
				{
					"name": "Basket",
					"item": [
						{
							"name": "Get Basket",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/basket?id=basket1",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"basket"
									],
									"query": [
										{
											"key": "id",
											"value": "basket1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Basket",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"basket1\",\r\n  \"items\": [\r\n    {\r\n      \"id\": 18,\r\n      \"productName\": \"Angular Blue Boots\",\r\n      \"price\": 180.00,\r\n      \"pictureUrl\": \"https://localhost:7215/images/products/boot-ang1.png\",\r\n      \"quantity\": 5,\r\n      \"category\": \"Mocha\",\r\n      \"brand\": \"Starbucks\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/api/basket",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"basket"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Basket",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/basket?id=basket1",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"basket"
									],
									"query": [
										{
											"key": "id",
											"value": "basket1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Identity",
					"item": [
						{
							"name": "Register",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"displayName\":\"Omar Ahmed\",\r\n    \"email\":\"omarAhmed@gmail.com\",\r\n    \"phoneNumber\":\"01057353186\",\r\n    \"password\":\"Pa$$w0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/api/account/register",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"account",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const user = pm.response.json();\r",
											"\r",
											"pm.test(\"Has Properties\" , function (){\r",
											"    pm.expect(user).to.have.property('email');\r",
											"    pm.expect(user).to.have.property('displayName');\r",
											"    pm.expect(user).to.have.property('token');\r",
											"});\r",
											"if(pm.test(\"has Properties\")){\r",
											"    pm.collectionVariables.set('Token' , user.token);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\":\"omarAhmed@gmail.com\",\r\n    \"password\":\"Pa$$w0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/api/account/login",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"account",
										"login"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Session 05",
			"item": [
				{
					"name": "Identity P2",
					"item": [
						{
							"name": "Get Current User",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/account/getcurrentuser",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"account",
										"getcurrentuser"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Current User Address",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/account/userAddress",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"account",
										"userAddress"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Current User Address",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"Ahmed\",\r\n    \"lastName\": \"Omar\",\r\n    \"street\": \"street 9\",\r\n    \"country\": \"Maadi\",\r\n    \"city\": \"Cairo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/api/account/userAddress",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"account",
										"userAddress"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Email Exists",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/account/emailExists?email=omarAhmed@gmail.com",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"account",
										"emailExists"
									],
									"query": [
										{
											"key": "email",
											"value": "omarAhmed@gmail.com"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Session 06",
			"item": [
				{
					"name": "Order",
					"item": [
						{
							"name": "Create Order",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"basketId\": \"basket1\",\r\n  \"deliveryMethodId\": 1,\r\n  \"shippingAddress\": {\r\n    \"firstName\": \"Ahmed\",\r\n    \"lastName\": \"Mohamed\",\r\n    \"street\": \"Helwan\",\r\n    \"country\": \"Cairo\",\r\n    \"city\": \"Egypt\"\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/api/orders",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Orders For User",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/orders",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Order By Id for User",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/orders/2",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"orders",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Delivery Methods",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/orders/DeliveryMethod",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"orders",
										"DeliveryMethod"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Payments",
					"item": [
						{
							"name": "Create Basket",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"basket1\",\r\n  \"items\": [\r\n    {\r\n      \"id\": 18,\r\n      \"productName\": \"Angular Blue Boots\",\r\n      \"price\": 180.00,\r\n      \"pictureUrl\": \"https://localhost:7215/images/products/boot-ang1.png\",\r\n      \"quantity\": 5,\r\n      \"category\": \"Mocha\",\r\n      \"brand\": \"Starbucks\"\r\n    }\r\n  ],\r\n  \"deliveryMethodId\":1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/api/basket",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"basket"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create payment intent as owner",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/Payments?basketId=basket1",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"Payments"
									],
									"query": [
										{
											"key": "basketId",
											"value": "basket1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update basket with client secret as Omar",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"basket1\",\r\n    \"items\": [\r\n        {\r\n            \"id\": 18,\r\n            \"productName\": \"Angular Blue Boots\",\r\n            \"price\": 180.00,\r\n            \"pictureUrl\": \"https://localhost:7215/images/products/boot-ang1.png\",\r\n            \"quantity\": 7,\r\n            \"category\": \"Mocha\",\r\n            \"brand\": \"Starbucks\"\r\n        }\r\n    ],\r\n    \"paymentIntentId\": \"pi_3PFNgfDammrUh4KK3dbGtUoa\",\r\n    \"clientSecrete\": \"pi_3PFNgfDammrUh4KK3dbGtUoa_secret_My6LqJgngcfb7vN7QHJqXU7Ko\",\r\n    \"deliveryMethodId\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/api/basket",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"basket"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update payment intent as owner",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/Payments?basketId=basket1",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"Payments"
									],
									"query": [
										{
											"key": "basketId",
											"value": "basket1"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{Token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BaseUrl",
			"value": "https://localhost:7215",
			"type": "string"
		},
		{
			"key": "Token",
			"value": "",
			"type": "string"
		}
	]
}